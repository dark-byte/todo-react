{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","className","onChange","e","preventDefault","target","value","placeholder","onClick","text","id","Math","random","console","error","alert","Todo","todo","key","filter","el","TodoList","map","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA+BeA,MA7Bf,YAA2D,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SAkB5C,OACI,uBAAMC,UAAU,OAAhB,UACI,uBAAOC,SAlBU,SAACC,GACtBA,EAAEC,iBACFN,EAAaK,EAAEE,OAAOC,QAgBiBL,UAAU,QACzCK,MAAOT,EAAWU,YAAY,qBAElC,wBAAQC,QAhBM,SAACL,GACnBA,EAAEC,iBACEP,EACAG,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACU,KAAMZ,EAAWa,GAAoB,IAAhBC,KAAKC,cAE/CC,QAAQC,MAAM,wBACdC,MAAM,kCAEVjB,EAAa,KAQuBG,UAAU,UAA1C,qBCRGe,MAff,YAAmD,IAAnCjB,EAAkC,EAAlCA,MAAOkB,EAA2B,EAA3BA,KAAMjB,EAAqB,EAArBA,SAAeS,GAAM,EAAXS,IAAW,EAANT,MAMxC,OACI,qBAAIR,UAAU,OAAd,UACI,gCAAQQ,IACR,wBAAQR,UAAU,SAASO,QAPhB,SAACL,GAChBH,EAASD,EAAMoB,QAAO,SAACC,GAAD,OAAQA,EAAGV,KAAOO,EAAKP,QAMzC,SAAgD,mBAAGT,UAAU,uBCS1DoB,MAjBf,YAAgD,EAA5BxB,UAA6B,IAAlBE,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SAClC,OACI,qBAAKC,UAAU,WAAf,SACI,oBAAIA,UAAU,WAAd,SAEQF,EAAMuB,KAAI,SAACL,GACP,OACI,cAAC,EAAD,CAAMA,KAAMA,EAAMlB,MAAOA,EAAOC,SAAUA,EAAwBS,KAAMQ,EAAKR,MAApBQ,EAAKP,YCW3Ea,MAhBf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAO3B,EAAP,KAAkBC,EAAlB,KACA,EAA0B0B,mBAAS,IAAnC,mBAAOzB,EAAP,KAAcC,EAAd,KAEA,OACE,qBAAKC,UAAU,MAAf,SACE,mCACE,oBAAIA,UAAU,UAAd,2BACA,cAAC,EAAD,CAAMF,MAAOA,EAAOC,SAAUA,EAAUH,UAAWA,EAAWC,aAAcA,IAC5E,cAAC,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,EAAUH,UAAWA,UCHhD4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5588745c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Form ({inputText, setInputText, todos, setTodos}){\r\n\r\n    const inputTextHandler = (e) =>{\r\n        e.preventDefault();\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const addBtnOnclick = (e) =>{\r\n        e.preventDefault();\r\n        if (inputText) {\r\n            setTodos([...todos, {text: inputText, id: Math.random() * 1000}]);\r\n        } else{\r\n            console.error(\"Todo cannot be empty\");\r\n            alert(\"Error!\\nTodo cannot be empty!\")\r\n        }\r\n        setInputText(\"\");\r\n    };\r\n\r\n    return(\r\n        <form className=\"form\">\r\n            <input onChange={inputTextHandler} className=\"input\" \r\n                value={inputText} placeholder=\"Enter Your To-do\">\r\n            </input>\r\n            <button onClick={addBtnOnclick} className=\"add-btn\">\r\n                add\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Todo ({todos, todo, setTodos, key, text}){\r\n\r\n    const delHandler = (e) =>{\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n\r\n    return(\r\n        <li className=\"todo\">\r\n            <label>{text}</label>\r\n            <button className=\"delBtn\" onClick={delHandler}><i className=\"fas fa-trash\"></i></button>\r\n        </li>\r\n\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList ({inputText, todos, setTodos}){\r\n    return(\r\n        <div className=\"todoCont\">\r\n            <ul className=\"todoList\">\r\n                {\r\n                    todos.map((todo) =>{\r\n                        return(\r\n                            <Todo todo={todo} todos={todos} setTodos={setTodos} key={todo.id} text={todo.text}/>\r\n                        );\r\n                    })\r\n                }\r\n                \r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\nimport './App.css';\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  \n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"heading\">My To-do List</h1>\n        <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText}/>\n        <TodoList todos={todos} setTodos={setTodos} inputText={inputText}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}